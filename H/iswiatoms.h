
  /* This file, iswiatoms.h, was generated automatically
     by calling "yap -L misc/buildswiatoms"
     and is based on SWIATOMS, copied from the SWI-Prolog distribution
     please do not update */

  YAP_AtomToInt(Yap_LookupAtom("abort"));
  YAP_AtomToInt(Yap_LookupAtom("$aborted"));
  YAP_AtomToInt(Yap_LookupAtom("abs"));
  YAP_AtomToInt(Yap_LookupAtom("access"));
  YAP_AtomToInt(Yap_LookupAtom("access_level"));
  YAP_AtomToInt(Yap_LookupAtom("acos"));
  YAP_AtomToInt(Yap_LookupAtom("acosh"));
  YAP_AtomToInt(Yap_LookupAtom("acyclic_term"));
  YAP_AtomToInt(Yap_LookupAtom("add_import"));
  YAP_AtomToInt(Yap_LookupAtom("address"));
  YAP_AtomToInt(Yap_LookupAtom("agc"));
  YAP_AtomToInt(Yap_LookupAtom("agc_gained"));
  YAP_AtomToInt(Yap_LookupAtom("agc_margin"));
  YAP_AtomToInt(Yap_LookupAtom("agc_time"));
  YAP_AtomToInt(Yap_LookupAtom("alias"));
  YAP_AtomToInt(Yap_LookupAtom("allow_variable_name_as_functor"));
  YAP_AtomToInt(Yap_LookupAtom("alnum"));
  YAP_AtomToInt(Yap_LookupAtom("alpha"));
  YAP_AtomToInt(Yap_LookupAtom("alternative"));
  YAP_AtomToInt(Yap_LookupAtom("/\\"));
  YAP_AtomToInt(Yap_LookupAtom("_"));
  YAP_AtomToInt(Yap_LookupAtom("append"));
  YAP_AtomToInt(Yap_LookupAtom("=:="));
  YAP_AtomToInt(Yap_LookupAtom("=\\="));
  YAP_AtomToInt(Yap_LookupAtom("argument"));
  YAP_AtomToInt(Yap_LookupAtom("argumentlimit"));
  YAP_AtomToInt(Yap_LookupAtom("arity"));
  YAP_AtomToInt(Yap_LookupAtom("as"));
  YAP_AtomToInt(Yap_LookupAtom("ascii"));
  YAP_AtomToInt(Yap_LookupAtom("asin"));
  YAP_AtomToInt(Yap_LookupAtom("asinh"));
  YAP_AtomToInt(Yap_LookupAtom("assert"));
  YAP_AtomToInt(Yap_LookupAtom("asserta"));
  YAP_AtomToInt(Yap_LookupAtom("at"));
  YAP_AtomToInt(Yap_LookupAtom("=@="));
  YAP_AtomToInt(Yap_LookupAtom("at_exit"));
  YAP_AtomToInt(Yap_LookupAtom("@>"));
  YAP_AtomToInt(Yap_LookupAtom("@>="));
  YAP_AtomToInt(Yap_LookupAtom("\\=@="));
  YAP_AtomToInt(Yap_LookupAtom("@<"));
  YAP_AtomToInt(Yap_LookupAtom("@=<"));
  YAP_AtomToInt(Yap_LookupAtom("atan"));
  YAP_AtomToInt(Yap_LookupAtom("atan2"));
  YAP_AtomToInt(Yap_LookupAtom("atanh"));
  YAP_AtomToInt(Yap_LookupAtom("atom"));
  YAP_AtomToInt(Yap_LookupAtom("atom_garbage_collection"));
  YAP_AtomToInt(Yap_LookupAtom("atomic"));
  YAP_AtomToInt(Yap_LookupAtom("atoms"));
  YAP_AtomToInt(Yap_LookupAtom("att"));
  YAP_AtomToInt(Yap_LookupAtom("attributes"));
  YAP_AtomToInt(Yap_LookupAtom("attvar"));
  YAP_AtomToInt(Yap_LookupAtom("autoload"));
  YAP_AtomToInt(Yap_LookupAtom("back_quotes"));
  YAP_AtomToInt(Yap_LookupAtom("\\"));
  YAP_AtomToInt(Yap_LookupAtom("backtrace"));
  YAP_AtomToInt(Yap_LookupAtom("`"));
  YAP_AtomToInt(Yap_LookupAtom("|"));
  YAP_AtomToInt(Yap_LookupAtom("base"));
  YAP_AtomToInt(Yap_LookupAtom("begin"));
  YAP_AtomToInt(Yap_LookupAtom("binary"));
  YAP_AtomToInt(Yap_LookupAtom("binary_stream"));
  YAP_AtomToInt(Yap_LookupAtom("bind"));
  YAP_AtomToInt(Yap_LookupAtom("\\/"));
  YAP_AtomToInt(Yap_LookupAtom("blobs"));
  YAP_AtomToInt(Yap_LookupAtom("bof"));
  YAP_AtomToInt(Yap_LookupAtom("bom"));
  YAP_AtomToInt(Yap_LookupAtom("bool"));
  YAP_AtomToInt(Yap_LookupAtom("boolean"));
  YAP_AtomToInt(Yap_LookupAtom("brace_term_position"));
  YAP_AtomToInt(Yap_LookupAtom("brace_terms"));
  YAP_AtomToInt(Yap_LookupAtom("break"));
  YAP_AtomToInt(Yap_LookupAtom("break_level"));
  YAP_AtomToInt(Yap_LookupAtom("btree"));
  YAP_AtomToInt(Yap_LookupAtom("buffer"));
  YAP_AtomToInt(Yap_LookupAtom("buffer_size"));
  YAP_AtomToInt(Yap_LookupAtom("built_in_procedure"));
  YAP_AtomToInt(Yap_LookupAtom("busy"));
  YAP_AtomToInt(Yap_LookupAtom("byte"));
  YAP_AtomToInt(Yap_LookupAtom("c_stack"));
  YAP_AtomToInt(Yap_LookupAtom("call"));
  YAP_AtomToInt(Yap_LookupAtom("callable"));
  YAP_AtomToInt(Yap_LookupAtom("canceled"));
  YAP_AtomToInt(Yap_LookupAtom("case_sensitive_file_names"));
  YAP_AtomToInt(Yap_LookupAtom("catch"));
  YAP_AtomToInt(Yap_LookupAtom("category"));
  YAP_AtomToInt(Yap_LookupAtom("ceil"));
  YAP_AtomToInt(Yap_LookupAtom("ceiling"));
  YAP_AtomToInt(Yap_LookupAtom("char_type"));
  YAP_AtomToInt(Yap_LookupAtom("character"));
  YAP_AtomToInt(Yap_LookupAtom("character_code"));
  YAP_AtomToInt(Yap_LookupAtom("character_escapes"));
  YAP_AtomToInt(Yap_LookupAtom("chars"));
  YAP_AtomToInt(Yap_LookupAtom("chdir"));
  YAP_AtomToInt(Yap_LookupAtom("chmod"));
  YAP_AtomToInt(Yap_LookupAtom("choice"));
  YAP_AtomToInt(Yap_LookupAtom("class"));
  YAP_AtomToInt(Yap_LookupAtom("clause"));
  YAP_AtomToInt(Yap_LookupAtom("clause_reference"));
  YAP_AtomToInt(Yap_LookupAtom("clauses"));
  YAP_AtomToInt(Yap_LookupAtom("close"));
  YAP_AtomToInt(Yap_LookupAtom("close_on_abort"));
  YAP_AtomToInt(Yap_LookupAtom("close_on_exec"));
  YAP_AtomToInt(Yap_LookupAtom("close_option"));
  YAP_AtomToInt(Yap_LookupAtom("cm"));
  YAP_AtomToInt(Yap_LookupAtom("cntrl"));
  YAP_AtomToInt(Yap_LookupAtom("co"));
  YAP_AtomToInt(Yap_LookupAtom("codes"));
  YAP_AtomToInt(Yap_LookupAtom("collected"));
  YAP_AtomToInt(Yap_LookupAtom("collections"));
  YAP_AtomToInt(Yap_LookupAtom(":"));
  YAP_AtomToInt(Yap_LookupAtom(":="));
  YAP_AtomToInt(Yap_LookupAtom(","));
  YAP_AtomToInt(Yap_LookupAtom("comments"));
  YAP_AtomToInt(Yap_LookupAtom("compound"));
  YAP_AtomToInt(Yap_LookupAtom("context"));
  YAP_AtomToInt(Yap_LookupAtom("context_module"));
  YAP_AtomToInt(Yap_LookupAtom("continue"));
  YAP_AtomToInt(Yap_LookupAtom("copysign"));
  YAP_AtomToInt(Yap_LookupAtom("core"));
  YAP_AtomToInt(Yap_LookupAtom("core_left"));
  YAP_AtomToInt(Yap_LookupAtom("cos"));
  YAP_AtomToInt(Yap_LookupAtom("cosh"));
  YAP_AtomToInt(Yap_LookupAtom("cputime"));
  YAP_AtomToInt(Yap_LookupAtom("create"));
  YAP_AtomToInt(Yap_LookupAtom("csym"));
  YAP_AtomToInt(Yap_LookupAtom("csymf"));
  YAP_AtomToInt(Yap_LookupAtom("cumulative"));
  YAP_AtomToInt(Yap_LookupAtom("{}"));
  YAP_AtomToInt(Yap_LookupAtom("current"));
  YAP_AtomToInt(Yap_LookupAtom("current_input"));
  YAP_AtomToInt(Yap_LookupAtom("current_locale"));
  YAP_AtomToInt(Yap_LookupAtom("current_output"));
  YAP_AtomToInt(Yap_LookupAtom("!"));
  YAP_AtomToInt(Yap_LookupAtom("cut_call"));
  YAP_AtomToInt(Yap_LookupAtom("cut_exit"));
  YAP_AtomToInt(Yap_LookupAtom("cut_parent"));
  YAP_AtomToInt(Yap_LookupAtom("cut"));
  YAP_AtomToInt(Yap_LookupAtom("cycles"));
  YAP_AtomToInt(Yap_LookupAtom("cyclic_term"));
  YAP_AtomToInt(Yap_LookupAtom("$and"));
  YAP_AtomToInt(Yap_LookupAtom("date"));
  YAP_AtomToInt(Yap_LookupAtom("db_reference"));
  YAP_AtomToInt(Yap_LookupAtom("$c_call_prolog"));
  YAP_AtomToInt(Yap_LookupAtom("<meta-call>"));
  YAP_AtomToInt(Yap_LookupAtom("$call_cleanup"));
  YAP_AtomToInt(Yap_LookupAtom("$catch"));
  YAP_AtomToInt(Yap_LookupAtom("$cut"));
  YAP_AtomToInt(Yap_LookupAtom("dde_error"));
  YAP_AtomToInt(Yap_LookupAtom("dde_handle"));
  YAP_AtomToInt(Yap_LookupAtom("deadline"));
  YAP_AtomToInt(Yap_LookupAtom("debug"));
  YAP_AtomToInt(Yap_LookupAtom("debug_on_error"));
  YAP_AtomToInt(Yap_LookupAtom("debug_topic"));
  YAP_AtomToInt(Yap_LookupAtom("debugger_print_options"));
  YAP_AtomToInt(Yap_LookupAtom("debugger_show_context"));
  YAP_AtomToInt(Yap_LookupAtom("debugging"));
  YAP_AtomToInt(Yap_LookupAtom("dec10"));
  YAP_AtomToInt(Yap_LookupAtom("decimal_point"));
  YAP_AtomToInt(Yap_LookupAtom("default"));
  YAP_AtomToInt(Yap_LookupAtom("defined"));
  YAP_AtomToInt(Yap_LookupAtom("delete"));
  YAP_AtomToInt(Yap_LookupAtom("depth_limit_exceeded"));
  YAP_AtomToInt(Yap_LookupAtom("destroy"));
  YAP_AtomToInt(Yap_LookupAtom("detached"));
  YAP_AtomToInt(Yap_LookupAtom("detect"));
  YAP_AtomToInt(Yap_LookupAtom("development"));
  YAP_AtomToInt(Yap_LookupAtom("$exit"));
  YAP_AtomToInt(Yap_LookupAtom("$foreign_registered"));
  YAP_AtomToInt(Yap_LookupAtom("$garbage_collect"));
  YAP_AtomToInt(Yap_LookupAtom("digit"));
  YAP_AtomToInt(Yap_LookupAtom("directory"));
  YAP_AtomToInt(Yap_LookupAtom("discontiguous"));
  YAP_AtomToInt(Yap_LookupAtom("div"));
  YAP_AtomToInt(Yap_LookupAtom("/"));
  YAP_AtomToInt(Yap_LookupAtom("$load"));
  YAP_AtomToInt(Yap_LookupAtom("$message_queue"));
  YAP_AtomToInt(Yap_LookupAtom("$mutex"));
  YAP_AtomToInt(Yap_LookupAtom("domain_error"));
  YAP_AtomToInt(Yap_LookupAtom("dos"));
  YAP_AtomToInt(Yap_LookupAtom("."));
  YAP_AtomToInt(Yap_LookupAtom("dot_lists"));
  YAP_AtomToInt(Yap_LookupAtom("dots"));
  YAP_AtomToInt(Yap_LookupAtom("double_quotes"));
  YAP_AtomToInt(Yap_LookupAtom("**"));
  YAP_AtomToInt(Yap_LookupAtom("$parse_quasi_quotations"));
  YAP_AtomToInt(Yap_LookupAtom("$profile_node"));
  YAP_AtomToInt(Yap_LookupAtom("$quasi_quotation"));
  YAP_AtomToInt(Yap_LookupAtom("$query_loop"));
  YAP_AtomToInt(Yap_LookupAtom("$recover_and_rethrow"));
  YAP_AtomToInt(Yap_LookupAtom("$stream"));
  YAP_AtomToInt(Yap_LookupAtom("$thread_init"));
  YAP_AtomToInt(Yap_LookupAtom("$throw"));
  YAP_AtomToInt(Yap_LookupAtom("$time"));
  YAP_AtomToInt(Yap_LookupAtom("$toplevel"));
  YAP_AtomToInt(Yap_LookupAtom("duplicate_key"));
  YAP_AtomToInt(Yap_LookupAtom("$VAR$"));
  YAP_AtomToInt(Yap_LookupAtom("$variable_names"));
  YAP_AtomToInt(Yap_LookupAtom("$wakeup"));
  YAP_AtomToInt(Yap_LookupAtom("dynamic"));
  YAP_AtomToInt(Yap_LookupAtom("e"));
  YAP_AtomToInt(Yap_LookupAtom("encoding"));
  YAP_AtomToInt(Yap_LookupAtom("end"));
  YAP_AtomToInt(Yap_LookupAtom("end_of_file"));
  YAP_AtomToInt(Yap_LookupAtom("end_of_line"));
  YAP_AtomToInt(Yap_LookupAtom("end_of_stream"));
  YAP_AtomToInt(Yap_LookupAtom("environment"));
  YAP_AtomToInt(Yap_LookupAtom("eof"));
  YAP_AtomToInt(Yap_LookupAtom("eof_action"));
  YAP_AtomToInt(Yap_LookupAtom("eof_code"));
  YAP_AtomToInt(Yap_LookupAtom("epsilon"));
  YAP_AtomToInt(Yap_LookupAtom("equal"));
  YAP_AtomToInt(Yap_LookupAtom("="));
  YAP_AtomToInt(Yap_LookupAtom("erase"));
  YAP_AtomToInt(Yap_LookupAtom("erased"));
  YAP_AtomToInt(Yap_LookupAtom("erf"));
  YAP_AtomToInt(Yap_LookupAtom("erfc"));
  YAP_AtomToInt(Yap_LookupAtom("error"));
  YAP_AtomToInt(Yap_LookupAtom("eval"));
  YAP_AtomToInt(Yap_LookupAtom("evaluable"));
  YAP_AtomToInt(Yap_LookupAtom("evaluation_error"));
  YAP_AtomToInt(Yap_LookupAtom("exception"));
  YAP_AtomToInt(Yap_LookupAtom("exclusive"));
  YAP_AtomToInt(Yap_LookupAtom("execute"));
  YAP_AtomToInt(Yap_LookupAtom("exist"));
  YAP_AtomToInt(Yap_LookupAtom("existence_error"));
  YAP_AtomToInt(Yap_LookupAtom("exit"));
  YAP_AtomToInt(Yap_LookupAtom("exited"));
  YAP_AtomToInt(Yap_LookupAtom("exp"));
  YAP_AtomToInt(Yap_LookupAtom("export"));
  YAP_AtomToInt(Yap_LookupAtom("exported"));
  YAP_AtomToInt(Yap_LookupAtom("exports"));
  YAP_AtomToInt(Yap_LookupAtom("expression"));
  YAP_AtomToInt(Yap_LookupAtom("external_exception"));
  YAP_AtomToInt(Yap_LookupAtom("externals"));
  YAP_AtomToInt(Yap_LookupAtom("fact"));
  YAP_AtomToInt(Yap_LookupAtom("factor"));
  YAP_AtomToInt(Yap_LookupAtom("fail"));
  YAP_AtomToInt(Yap_LookupAtom("failure_error"));
  YAP_AtomToInt(Yap_LookupAtom("false"));
  YAP_AtomToInt(Yap_LookupAtom("feature"));
  YAP_AtomToInt(Yap_LookupAtom("file"));
  YAP_AtomToInt(Yap_LookupAtom("file_name"));
  YAP_AtomToInt(Yap_LookupAtom("file_name_variables"));
  YAP_AtomToInt(Yap_LookupAtom("file_no"));
  YAP_AtomToInt(Yap_LookupAtom("flag"));
  YAP_AtomToInt(Yap_LookupAtom("flag_value"));
  YAP_AtomToInt(Yap_LookupAtom("float"));
  YAP_AtomToInt(Yap_LookupAtom("float_format"));
  YAP_AtomToInt(Yap_LookupAtom("float_fractional_part"));
  YAP_AtomToInt(Yap_LookupAtom("float_integer_part"));
  YAP_AtomToInt(Yap_LookupAtom("float_overflow"));
  YAP_AtomToInt(Yap_LookupAtom("float_underflow"));
  YAP_AtomToInt(Yap_LookupAtom("floor"));
  YAP_AtomToInt(Yap_LookupAtom("force"));
  YAP_AtomToInt(Yap_LookupAtom("foreign"));
  YAP_AtomToInt(Yap_LookupAtom("$foreign_function"));
  YAP_AtomToInt(Yap_LookupAtom("foreign_return_value"));
  YAP_AtomToInt(Yap_LookupAtom("fork"));
  YAP_AtomToInt(Yap_LookupAtom("frame"));
  YAP_AtomToInt(Yap_LookupAtom("frame_attribute"));
  YAP_AtomToInt(Yap_LookupAtom("frame_finished"));
  YAP_AtomToInt(Yap_LookupAtom("frame_reference"));
  YAP_AtomToInt(Yap_LookupAtom("free_of_attvar"));
  YAP_AtomToInt(Yap_LookupAtom("freeze"));
  YAP_AtomToInt(Yap_LookupAtom("full"));
  YAP_AtomToInt(Yap_LookupAtom("fullstop"));
  YAP_AtomToInt(Yap_LookupAtom("functor_name"));
  YAP_AtomToInt(Yap_LookupAtom("functors"));
  YAP_AtomToInt(Yap_LookupAtom("fx"));
  YAP_AtomToInt(Yap_LookupAtom("fy"));
  YAP_AtomToInt(Yap_LookupAtom("<garbage_collected>"));
  YAP_AtomToInt(Yap_LookupAtom("garbage_collection"));
  YAP_AtomToInt(Yap_LookupAtom("gc"));
  YAP_AtomToInt(Yap_LookupAtom("gcd"));
  YAP_AtomToInt(Yap_LookupAtom("gctime"));
  YAP_AtomToInt(Yap_LookupAtom("//"));
  YAP_AtomToInt(Yap_LookupAtom("getcwd"));
  YAP_AtomToInt(Yap_LookupAtom("global"));
  YAP_AtomToInt(Yap_LookupAtom("global_shifts"));
  YAP_AtomToInt(Yap_LookupAtom("global_stack"));
  YAP_AtomToInt(Yap_LookupAtom("globallimit"));
  YAP_AtomToInt(Yap_LookupAtom("globalused"));
  YAP_AtomToInt(Yap_LookupAtom("goal"));
  YAP_AtomToInt(Yap_LookupAtom("goal_expansion"));
  YAP_AtomToInt(Yap_LookupAtom("-->"));
  YAP_AtomToInt(Yap_LookupAtom("graph"));
  YAP_AtomToInt(Yap_LookupAtom("ground"));
  YAP_AtomToInt(Yap_LookupAtom("grouping"));
  YAP_AtomToInt(Yap_LookupAtom("gvar"));
  YAP_AtomToInt(Yap_LookupAtom("halt"));
  YAP_AtomToInt(Yap_LookupAtom("has_alternatives"));
  YAP_AtomToInt(Yap_LookupAtom("hash"));
  YAP_AtomToInt(Yap_LookupAtom("hashed"));
  YAP_AtomToInt(Yap_LookupAtom("^"));
  YAP_AtomToInt(Yap_LookupAtom("heap_gc"));
  YAP_AtomToInt(Yap_LookupAtom("heapused"));
  YAP_AtomToInt(Yap_LookupAtom("help"));
  YAP_AtomToInt(Yap_LookupAtom("hidden"));
  YAP_AtomToInt(Yap_LookupAtom("hide_childs"));
  YAP_AtomToInt(Yap_LookupAtom("history_depth"));
  YAP_AtomToInt(Yap_LookupAtom("->"));
  YAP_AtomToInt(Yap_LookupAtom("ignore"));
  YAP_AtomToInt(Yap_LookupAtom("ignore_ops"));
  YAP_AtomToInt(Yap_LookupAtom("import_into"));
  YAP_AtomToInt(Yap_LookupAtom("import_type"));
  YAP_AtomToInt(Yap_LookupAtom("imported"));
  YAP_AtomToInt(Yap_LookupAtom("imported_procedure"));
  YAP_AtomToInt(Yap_LookupAtom("index"));
  YAP_AtomToInt(Yap_LookupAtom("indexed"));
  YAP_AtomToInt(Yap_LookupAtom("inf"));
  YAP_AtomToInt(Yap_LookupAtom("inferences"));
  YAP_AtomToInt(Yap_LookupAtom("infinite"));
  YAP_AtomToInt(Yap_LookupAtom("informational"));
  YAP_AtomToInt(Yap_LookupAtom("init_file"));
  YAP_AtomToInt(Yap_LookupAtom("initialization"));
  YAP_AtomToInt(Yap_LookupAtom("input"));
  YAP_AtomToInt(Yap_LookupAtom("inserted_char"));
  YAP_AtomToInt(Yap_LookupAtom("instantiation_error"));
  YAP_AtomToInt(Yap_LookupAtom("int"));
  YAP_AtomToInt(Yap_LookupAtom("int64_t"));
  YAP_AtomToInt(Yap_LookupAtom("int_overflow"));
  YAP_AtomToInt(Yap_LookupAtom("integer"));
  YAP_AtomToInt(Yap_LookupAtom("integer_expression"));
  YAP_AtomToInt(Yap_LookupAtom("interrupt"));
  YAP_AtomToInt(Yap_LookupAtom("io_error"));
  YAP_AtomToInt(Yap_LookupAtom("io_mode"));
  YAP_AtomToInt(Yap_LookupAtom("ioctl"));
  YAP_AtomToInt(Yap_LookupAtom("is"));
  YAP_AtomToInt(Yap_LookupAtom("iso"));
  YAP_AtomToInt(Yap_LookupAtom("iso_latin_1"));
  YAP_AtomToInt(Yap_LookupAtom("$VAR"));
  YAP_AtomToInt(Yap_LookupAtom("join"));
  YAP_AtomToInt(Yap_LookupAtom("jump"));
  YAP_AtomToInt(Yap_LookupAtom("kernel"));
  YAP_AtomToInt(Yap_LookupAtom("key"));
  YAP_AtomToInt(Yap_LookupAtom("key_value_position"));
  YAP_AtomToInt(Yap_LookupAtom(">"));
  YAP_AtomToInt(Yap_LookupAtom(">="));
  YAP_AtomToInt(Yap_LookupAtom("level"));
  YAP_AtomToInt(Yap_LookupAtom("lgamma"));
  YAP_AtomToInt(Yap_LookupAtom("li"));
  YAP_AtomToInt(Yap_LookupAtom("library"));
  YAP_AtomToInt(Yap_LookupAtom("limit"));
  YAP_AtomToInt(Yap_LookupAtom("line"));
  YAP_AtomToInt(Yap_LookupAtom("line_count"));
  YAP_AtomToInt(Yap_LookupAtom("line_position"));
  YAP_AtomToInt(Yap_LookupAtom("list"));
  YAP_AtomToInt(Yap_LookupAtom("list_position"));
  YAP_AtomToInt(Yap_LookupAtom("listing"));
  YAP_AtomToInt(Yap_LookupAtom("local"));
  YAP_AtomToInt(Yap_LookupAtom("local_shifts"));
  YAP_AtomToInt(Yap_LookupAtom("local_stack"));
  YAP_AtomToInt(Yap_LookupAtom("locale"));
  YAP_AtomToInt(Yap_LookupAtom("locale_property"));
  YAP_AtomToInt(Yap_LookupAtom("locallimit"));
  YAP_AtomToInt(Yap_LookupAtom("localused"));
  YAP_AtomToInt(Yap_LookupAtom("lock"));
  YAP_AtomToInt(Yap_LookupAtom("locked"));
  YAP_AtomToInt(Yap_LookupAtom("log"));
  YAP_AtomToInt(Yap_LookupAtom("log10"));
  YAP_AtomToInt(Yap_LookupAtom("long"));
  YAP_AtomToInt(Yap_LookupAtom("loose"));
  YAP_AtomToInt(Yap_LookupAtom("low"));
  YAP_AtomToInt(Yap_LookupAtom("lower"));
  YAP_AtomToInt(Yap_LookupAtom("lsb"));
  YAP_AtomToInt(Yap_LookupAtom("<<"));
  YAP_AtomToInt(Yap_LookupAtom("main"));
  YAP_AtomToInt(Yap_LookupAtom("map"));
  YAP_AtomToInt(Yap_LookupAtom("map_position"));
  YAP_AtomToInt(Yap_LookupAtom(">:<"));
  YAP_AtomToInt(Yap_LookupAtom(":<"));
  YAP_AtomToInt(Yap_LookupAtom("mark"));
  YAP_AtomToInt(Yap_LookupAtom("matches"));
  YAP_AtomToInt(Yap_LookupAtom("max"));
  YAP_AtomToInt(Yap_LookupAtom("max_arity"));
  YAP_AtomToInt(Yap_LookupAtom("max_dde_handles"));
  YAP_AtomToInt(Yap_LookupAtom("max_depth"));
  YAP_AtomToInt(Yap_LookupAtom("max_files"));
  YAP_AtomToInt(Yap_LookupAtom("max_frame_size"));
  YAP_AtomToInt(Yap_LookupAtom("max_length"));
  YAP_AtomToInt(Yap_LookupAtom("max_path_length"));
  YAP_AtomToInt(Yap_LookupAtom("max_size"));
  YAP_AtomToInt(Yap_LookupAtom("max_variable_length"));
  YAP_AtomToInt(Yap_LookupAtom("memory"));
  YAP_AtomToInt(Yap_LookupAtom("message"));
  YAP_AtomToInt(Yap_LookupAtom("message_lines"));
  YAP_AtomToInt(Yap_LookupAtom("message_queue"));
  YAP_AtomToInt(Yap_LookupAtom("message_queue_property"));
  YAP_AtomToInt(Yap_LookupAtom("meta_argument"));
  YAP_AtomToInt(Yap_LookupAtom("meta_argument_specifier"));
  YAP_AtomToInt(Yap_LookupAtom("meta_atom"));
  YAP_AtomToInt(Yap_LookupAtom("meta_predicate"));
  YAP_AtomToInt(Yap_LookupAtom("min"));
  YAP_AtomToInt(Yap_LookupAtom("min_free"));
  YAP_AtomToInt(Yap_LookupAtom("-"));
  YAP_AtomToInt(Yap_LookupAtom("mismatched_char"));
  YAP_AtomToInt(Yap_LookupAtom("mod"));
  YAP_AtomToInt(Yap_LookupAtom("mode"));
  YAP_AtomToInt(Yap_LookupAtom("modify"));
  YAP_AtomToInt(Yap_LookupAtom("module"));
  YAP_AtomToInt(Yap_LookupAtom("module_class"));
  YAP_AtomToInt(Yap_LookupAtom("module_property"));
  YAP_AtomToInt(Yap_LookupAtom("module_transparent"));
  YAP_AtomToInt(Yap_LookupAtom("modules"));
  YAP_AtomToInt(Yap_LookupAtom("msb"));
  YAP_AtomToInt(Yap_LookupAtom("multifile"));
  YAP_AtomToInt(Yap_LookupAtom("mutex"));
  YAP_AtomToInt(Yap_LookupAtom("mutex_option"));
  YAP_AtomToInt(Yap_LookupAtom("mutex_property"));
  YAP_AtomToInt(Yap_LookupAtom("natural"));
  YAP_AtomToInt(Yap_LookupAtom("newline"));
  YAP_AtomToInt(Yap_LookupAtom("next_argument"));
  YAP_AtomToInt(Yap_LookupAtom("[]"));
  YAP_AtomToInt(Yap_LookupAtom("nl"));
  YAP_AtomToInt(Yap_LookupAtom("nlink"));
  YAP_AtomToInt(Yap_LookupAtom("no_memory"));
  YAP_AtomToInt(Yap_LookupAtom("nodebug"));
  YAP_AtomToInt(Yap_LookupAtom("non_empty_list"));
  YAP_AtomToInt(Yap_LookupAtom("non_terminal"));
  YAP_AtomToInt(Yap_LookupAtom("none"));
  YAP_AtomToInt(Yap_LookupAtom("nonvar"));
  YAP_AtomToInt(Yap_LookupAtom("noprofile"));
  YAP_AtomToInt(Yap_LookupAtom("normal"));
  YAP_AtomToInt(Yap_LookupAtom("not"));
  YAP_AtomToInt(Yap_LookupAtom("\\="));
  YAP_AtomToInt(Yap_LookupAtom("not_implemented"));
  YAP_AtomToInt(Yap_LookupAtom("not_less_than_one"));
  YAP_AtomToInt(Yap_LookupAtom("not_less_than_zero"));
  YAP_AtomToInt(Yap_LookupAtom("\\+"));
  YAP_AtomToInt(Yap_LookupAtom("\\=="));
  YAP_AtomToInt(Yap_LookupAtom("not_unique"));
  YAP_AtomToInt(Yap_LookupAtom("number"));
  YAP_AtomToInt(Yap_LookupAtom("number_of_clauses"));
  YAP_AtomToInt(Yap_LookupAtom("number_of_rules"));
  YAP_AtomToInt(Yap_LookupAtom("numbervar_option"));
  YAP_AtomToInt(Yap_LookupAtom("numbervars"));
  YAP_AtomToInt(Yap_LookupAtom("occurs_check"));
  YAP_AtomToInt(Yap_LookupAtom("octet"));
  YAP_AtomToInt(Yap_LookupAtom("off"));
  YAP_AtomToInt(Yap_LookupAtom("on"));
  YAP_AtomToInt(Yap_LookupAtom("open"));
  YAP_AtomToInt(Yap_LookupAtom("operator"));
  YAP_AtomToInt(Yap_LookupAtom("operator_priority"));
  YAP_AtomToInt(Yap_LookupAtom("operator_specifier"));
  YAP_AtomToInt(Yap_LookupAtom("optimise"));
  YAP_AtomToInt(Yap_LookupAtom("or"));
  YAP_AtomToInt(Yap_LookupAtom("order"));
  YAP_AtomToInt(Yap_LookupAtom("output"));
  YAP_AtomToInt(Yap_LookupAtom("owner"));
  YAP_AtomToInt(Yap_LookupAtom("pair"));
  YAP_AtomToInt(Yap_LookupAtom("paren"));
  YAP_AtomToInt(Yap_LookupAtom("parent"));
  YAP_AtomToInt(Yap_LookupAtom("parent_goal"));
  YAP_AtomToInt(Yap_LookupAtom("partial"));
  YAP_AtomToInt(Yap_LookupAtom("past"));
  YAP_AtomToInt(Yap_LookupAtom("past_end_of_stream"));
  YAP_AtomToInt(Yap_LookupAtom("pattern"));
  YAP_AtomToInt(Yap_LookupAtom("pc"));
  YAP_AtomToInt(Yap_LookupAtom("peek"));
  YAP_AtomToInt(Yap_LookupAtom("period"));
  YAP_AtomToInt(Yap_LookupAtom("permission_error"));
  YAP_AtomToInt(Yap_LookupAtom("pi"));
  YAP_AtomToInt(Yap_LookupAtom("pipe"));
  YAP_AtomToInt(Yap_LookupAtom("plain"));
  YAP_AtomToInt(Yap_LookupAtom("+"));
  YAP_AtomToInt(Yap_LookupAtom("popcount"));
  YAP_AtomToInt(Yap_LookupAtom("portray"));
  YAP_AtomToInt(Yap_LookupAtom("portray_goal"));
  YAP_AtomToInt(Yap_LookupAtom("position"));
  YAP_AtomToInt(Yap_LookupAtom("posix"));
  YAP_AtomToInt(Yap_LookupAtom("powm"));
  YAP_AtomToInt(Yap_LookupAtom("predicate_indicator"));
  YAP_AtomToInt(Yap_LookupAtom("predicates"));
  YAP_AtomToInt(Yap_LookupAtom("print"));
  YAP_AtomToInt(Yap_LookupAtom("print_message"));
  YAP_AtomToInt(Yap_LookupAtom("priority"));
  YAP_AtomToInt(Yap_LookupAtom("private_procedure"));
  YAP_AtomToInt(Yap_LookupAtom("procedure"));
  YAP_AtomToInt(Yap_LookupAtom("process_comment"));
  YAP_AtomToInt(Yap_LookupAtom("process_cputime"));
  YAP_AtomToInt(Yap_LookupAtom("profile_mode"));
  YAP_AtomToInt(Yap_LookupAtom("profile_no_cpu_time"));
  YAP_AtomToInt(Yap_LookupAtom("profile_node"));
  YAP_AtomToInt(Yap_LookupAtom("program"));
  YAP_AtomToInt(Yap_LookupAtom("program_counter"));
  YAP_AtomToInt(Yap_LookupAtom("prolog"));
  YAP_AtomToInt(Yap_LookupAtom("prolog_atom_start"));
  YAP_AtomToInt(Yap_LookupAtom("prolog_flag"));
  YAP_AtomToInt(Yap_LookupAtom("prolog_flag_access"));
  YAP_AtomToInt(Yap_LookupAtom("prolog_flag_option"));
  YAP_AtomToInt(Yap_LookupAtom("prolog_flag_type"));
  YAP_AtomToInt(Yap_LookupAtom("prolog_identifier_continue"));
  YAP_AtomToInt(Yap_LookupAtom("prolog_symbol"));
  YAP_AtomToInt(Yap_LookupAtom("prolog_var_start"));
  YAP_AtomToInt(Yap_LookupAtom("|:"));
  YAP_AtomToInt(Yap_LookupAtom("property"));
  YAP_AtomToInt(Yap_LookupAtom("protocol"));
  YAP_AtomToInt(Yap_LookupAtom(":-"));
  YAP_AtomToInt(Yap_LookupAtom("public"));
  YAP_AtomToInt(Yap_LookupAtom("punct"));
  YAP_AtomToInt(Yap_LookupAtom("quasi_quotation"));
  YAP_AtomToInt(Yap_LookupAtom("quasi_quotation_position"));
  YAP_AtomToInt(Yap_LookupAtom("quasi_quotation_syntax"));
  YAP_AtomToInt(Yap_LookupAtom("quasi_quotations"));
  YAP_AtomToInt(Yap_LookupAtom("?-"));
  YAP_AtomToInt(Yap_LookupAtom("?"));
  YAP_AtomToInt(Yap_LookupAtom("queue_option"));
  YAP_AtomToInt(Yap_LookupAtom("quiet"));
  YAP_AtomToInt(Yap_LookupAtom("quote"));
  YAP_AtomToInt(Yap_LookupAtom("quoted"));
  YAP_AtomToInt(Yap_LookupAtom("radix"));
  YAP_AtomToInt(Yap_LookupAtom("random"));
  YAP_AtomToInt(Yap_LookupAtom("random_float"));
  YAP_AtomToInt(Yap_LookupAtom("random_option"));
  YAP_AtomToInt(Yap_LookupAtom("rational"));
  YAP_AtomToInt(Yap_LookupAtom("rationalize"));
  YAP_AtomToInt(Yap_LookupAtom("rdiv"));
  YAP_AtomToInt(Yap_LookupAtom("read"));
  YAP_AtomToInt(Yap_LookupAtom("read_only"));
  YAP_AtomToInt(Yap_LookupAtom("read_option"));
  YAP_AtomToInt(Yap_LookupAtom("read_write"));
  YAP_AtomToInt(Yap_LookupAtom("readline"));
  YAP_AtomToInt(Yap_LookupAtom("real_time"));
  YAP_AtomToInt(Yap_LookupAtom("receiver"));
  YAP_AtomToInt(Yap_LookupAtom("record"));
  YAP_AtomToInt(Yap_LookupAtom("record_position"));
  YAP_AtomToInt(Yap_LookupAtom("redefine"));
  YAP_AtomToInt(Yap_LookupAtom("redo"));
  YAP_AtomToInt(Yap_LookupAtom("redo_in_skip"));
  YAP_AtomToInt(Yap_LookupAtom("references"));
  YAP_AtomToInt(Yap_LookupAtom("rem"));
  YAP_AtomToInt(Yap_LookupAtom("rename"));
  YAP_AtomToInt(Yap_LookupAtom("repeat"));
  YAP_AtomToInt(Yap_LookupAtom("report_error"));
  YAP_AtomToInt(Yap_LookupAtom("reposition"));
  YAP_AtomToInt(Yap_LookupAtom("representation_error"));
  YAP_AtomToInt(Yap_LookupAtom("representation_errors"));
  YAP_AtomToInt(Yap_LookupAtom("reset"));
  YAP_AtomToInt(Yap_LookupAtom("resource_error"));
  YAP_AtomToInt(Yap_LookupAtom("resource_handle"));
  YAP_AtomToInt(Yap_LookupAtom("retry"));
  YAP_AtomToInt(Yap_LookupAtom("round"));
  YAP_AtomToInt(Yap_LookupAtom(">>"));
  YAP_AtomToInt(Yap_LookupAtom("running"));
  YAP_AtomToInt(Yap_LookupAtom("runtime"));
  YAP_AtomToInt(Yap_LookupAtom("save_class"));
  YAP_AtomToInt(Yap_LookupAtom("save_option"));
  YAP_AtomToInt(Yap_LookupAtom("scripting"));
  YAP_AtomToInt(Yap_LookupAtom("see"));
  YAP_AtomToInt(Yap_LookupAtom("seed"));
  YAP_AtomToInt(Yap_LookupAtom("seek_method"));
  YAP_AtomToInt(Yap_LookupAtom("select"));
  YAP_AtomToInt(Yap_LookupAtom(";"));
  YAP_AtomToInt(Yap_LookupAtom("separated"));
  YAP_AtomToInt(Yap_LookupAtom("set"));
  YAP_AtomToInt(Yap_LookupAtom("set_end_of_stream"));
  YAP_AtomToInt(Yap_LookupAtom("setup_call_catcher_cleanup"));
  YAP_AtomToInt(Yap_LookupAtom("shared"));
  YAP_AtomToInt(Yap_LookupAtom("shared_object"));
  YAP_AtomToInt(Yap_LookupAtom("shared_object_handle"));
  YAP_AtomToInt(Yap_LookupAtom("shell"));
  YAP_AtomToInt(Yap_LookupAtom("shift_time"));
  YAP_AtomToInt(Yap_LookupAtom("sign"));
  YAP_AtomToInt(Yap_LookupAtom("signal"));
  YAP_AtomToInt(Yap_LookupAtom("signal_handler"));
  YAP_AtomToInt(Yap_LookupAtom("silent"));
  YAP_AtomToInt(Yap_LookupAtom("sin"));
  YAP_AtomToInt(Yap_LookupAtom("singletons"));
  YAP_AtomToInt(Yap_LookupAtom("sinh"));
  YAP_AtomToInt(Yap_LookupAtom("size"));
  YAP_AtomToInt(Yap_LookupAtom("size_t"));
  YAP_AtomToInt(Yap_LookupAtom("skip"));
  YAP_AtomToInt(Yap_LookupAtom("skipped"));
  YAP_AtomToInt(Yap_LookupAtom("<"));
  YAP_AtomToInt(Yap_LookupAtom("=<"));
  YAP_AtomToInt(Yap_LookupAtom("*->"));
  YAP_AtomToInt(Yap_LookupAtom("source_sink"));
  YAP_AtomToInt(Yap_LookupAtom("space"));
  YAP_AtomToInt(Yap_LookupAtom("spacing"));
  YAP_AtomToInt(Yap_LookupAtom("spare"));
  YAP_AtomToInt(Yap_LookupAtom("spy"));
  YAP_AtomToInt(Yap_LookupAtom("sqrt"));
  YAP_AtomToInt(Yap_LookupAtom("stack"));
  YAP_AtomToInt(Yap_LookupAtom("stack_parameter"));
  YAP_AtomToInt(Yap_LookupAtom("stack_shifts"));
  YAP_AtomToInt(Yap_LookupAtom("stacks"));
  YAP_AtomToInt(Yap_LookupAtom("stand_alone"));
  YAP_AtomToInt(Yap_LookupAtom("standard"));
  YAP_AtomToInt(Yap_LookupAtom("*"));
  YAP_AtomToInt(Yap_LookupAtom("start"));
  YAP_AtomToInt(Yap_LookupAtom("stat"));
  YAP_AtomToInt(Yap_LookupAtom("state"));
  YAP_AtomToInt(Yap_LookupAtom("static_procedure"));
  YAP_AtomToInt(Yap_LookupAtom("statistics"));
  YAP_AtomToInt(Yap_LookupAtom("status"));
  YAP_AtomToInt(Yap_LookupAtom("stderr"));
  YAP_AtomToInt(Yap_LookupAtom("stream"));
  YAP_AtomToInt(Yap_LookupAtom("stream_option"));
  YAP_AtomToInt(Yap_LookupAtom("stream_or_alias"));
  YAP_AtomToInt(Yap_LookupAtom("stream_pair"));
  YAP_AtomToInt(Yap_LookupAtom("$stream_position"));
  YAP_AtomToInt(Yap_LookupAtom("stream_property"));
  YAP_AtomToInt(Yap_LookupAtom("stream_type_check"));
  YAP_AtomToInt(Yap_LookupAtom("=="));
  YAP_AtomToInt(Yap_LookupAtom("string"));
  YAP_AtomToInt(Yap_LookupAtom("string_position"));
  YAP_AtomToInt(Yap_LookupAtom("strong"));
  YAP_AtomToInt(Yap_LookupAtom("subterm_positions"));
  YAP_AtomToInt(Yap_LookupAtom("suffix"));
  YAP_AtomToInt(Yap_LookupAtom("symbol_char"));
  YAP_AtomToInt(Yap_LookupAtom("syntax_error"));
  YAP_AtomToInt(Yap_LookupAtom("syntax_errors"));
  YAP_AtomToInt(Yap_LookupAtom("system"));
  YAP_AtomToInt(Yap_LookupAtom("system_error"));
  YAP_AtomToInt(Yap_LookupAtom("system_init_file"));
  YAP_AtomToInt(Yap_LookupAtom("system_thread_id"));
  YAP_AtomToInt(Yap_LookupAtom("system_time"));
  YAP_AtomToInt(Yap_LookupAtom("tan"));
  YAP_AtomToInt(Yap_LookupAtom("tanh"));
  YAP_AtomToInt(Yap_LookupAtom("temporary_files"));
  YAP_AtomToInt(Yap_LookupAtom("term"));
  YAP_AtomToInt(Yap_LookupAtom("term_expansion"));
  YAP_AtomToInt(Yap_LookupAtom("term_position"));
  YAP_AtomToInt(Yap_LookupAtom("terminal"));
  YAP_AtomToInt(Yap_LookupAtom("terminal_capability"));
  YAP_AtomToInt(Yap_LookupAtom("test"));
  YAP_AtomToInt(Yap_LookupAtom("text"));
  YAP_AtomToInt(Yap_LookupAtom("text_stream"));
  YAP_AtomToInt(Yap_LookupAtom("thousands_sep"));
  YAP_AtomToInt(Yap_LookupAtom("thread"));
  YAP_AtomToInt(Yap_LookupAtom("thread_cputime"));
  YAP_AtomToInt(Yap_LookupAtom("thread_get_message_option"));
  YAP_AtomToInt(Yap_LookupAtom("thread_initialization"));
  YAP_AtomToInt(Yap_LookupAtom("thread_local"));
  YAP_AtomToInt(Yap_LookupAtom("thread_local_procedure"));
  YAP_AtomToInt(Yap_LookupAtom("thread_option"));
  YAP_AtomToInt(Yap_LookupAtom("thread_property"));
  YAP_AtomToInt(Yap_LookupAtom("threads"));
  YAP_AtomToInt(Yap_LookupAtom("threads_created"));
  YAP_AtomToInt(Yap_LookupAtom("throw"));
  YAP_AtomToInt(Yap_LookupAtom("~"));
  YAP_AtomToInt(Yap_LookupAtom("time"));
  YAP_AtomToInt(Yap_LookupAtom("time_stamp"));
  YAP_AtomToInt(Yap_LookupAtom("timeout"));
  YAP_AtomToInt(Yap_LookupAtom("timeout_error"));
  YAP_AtomToInt(Yap_LookupAtom("timezone"));
  YAP_AtomToInt(Yap_LookupAtom("to_lower"));
  YAP_AtomToInt(Yap_LookupAtom("to_upper"));
  YAP_AtomToInt(Yap_LookupAtom("top"));
  YAP_AtomToInt(Yap_LookupAtom("top_level"));
  YAP_AtomToInt(Yap_LookupAtom("toplevel"));
  YAP_AtomToInt(Yap_LookupAtom("trace"));
  YAP_AtomToInt(Yap_LookupAtom("trace_any"));
  YAP_AtomToInt(Yap_LookupAtom("trace_call"));
  YAP_AtomToInt(Yap_LookupAtom("trace_exit"));
  YAP_AtomToInt(Yap_LookupAtom("trace_fail"));
  YAP_AtomToInt(Yap_LookupAtom("trace_gc"));
  YAP_AtomToInt(Yap_LookupAtom("trace_redo"));
  YAP_AtomToInt(Yap_LookupAtom("prolog_trace_interception"));
  YAP_AtomToInt(Yap_LookupAtom("tracing"));
  YAP_AtomToInt(Yap_LookupAtom("trail"));
  YAP_AtomToInt(Yap_LookupAtom("trail_shifts"));
  YAP_AtomToInt(Yap_LookupAtom("traillimit"));
  YAP_AtomToInt(Yap_LookupAtom("trailused"));
  YAP_AtomToInt(Yap_LookupAtom("transparent"));
  YAP_AtomToInt(Yap_LookupAtom("transposed_char"));
  YAP_AtomToInt(Yap_LookupAtom("transposed_word"));
  YAP_AtomToInt(Yap_LookupAtom("true"));
  YAP_AtomToInt(Yap_LookupAtom("truncate"));
  YAP_AtomToInt(Yap_LookupAtom("tty"));
  YAP_AtomToInt(Yap_LookupAtom("tty_control"));
  YAP_AtomToInt(Yap_LookupAtom("type"));
  YAP_AtomToInt(Yap_LookupAtom("type_error"));
  YAP_AtomToInt(Yap_LookupAtom("undefined"));
  YAP_AtomToInt(Yap_LookupAtom("undefined_global_variable"));
  YAP_AtomToInt(Yap_LookupAtom("$undefined_procedure"));
  YAP_AtomToInt(Yap_LookupAtom("unicode_be"));
  YAP_AtomToInt(Yap_LookupAtom("unicode_le"));
  YAP_AtomToInt(Yap_LookupAtom("unify"));
  YAP_AtomToInt(Yap_LookupAtom("?="));
  YAP_AtomToInt(Yap_LookupAtom("uninstantiation_error"));
  YAP_AtomToInt(Yap_LookupAtom("unique"));
  YAP_AtomToInt(Yap_LookupAtom("=.."));
  YAP_AtomToInt(Yap_LookupAtom("unknown"));
  YAP_AtomToInt(Yap_LookupAtom("unlimited"));
  YAP_AtomToInt(Yap_LookupAtom("unload"));
  YAP_AtomToInt(Yap_LookupAtom("unlock"));
  YAP_AtomToInt(Yap_LookupAtom("unlocked"));
  YAP_AtomToInt(Yap_LookupAtom("update"));
  YAP_AtomToInt(Yap_LookupAtom("upper"));
  YAP_AtomToInt(Yap_LookupAtom("user"));
  YAP_AtomToInt(Yap_LookupAtom("user_error"));
  YAP_AtomToInt(Yap_LookupAtom("user_flags"));
  YAP_AtomToInt(Yap_LookupAtom("user_input"));
  YAP_AtomToInt(Yap_LookupAtom("user_output"));
  YAP_AtomToInt(Yap_LookupAtom("UTC"));
  YAP_AtomToInt(Yap_LookupAtom("utf8"));
  YAP_AtomToInt(Yap_LookupAtom("v"));
  YAP_AtomToInt(Yap_LookupAtom("var"));
  YAP_AtomToInt(Yap_LookupAtom("variable"));
  YAP_AtomToInt(Yap_LookupAtom("variable_names"));
  YAP_AtomToInt(Yap_LookupAtom("variables"));
  YAP_AtomToInt(Yap_LookupAtom("very_deep"));
  YAP_AtomToInt(Yap_LookupAtom("vmi"));
  YAP_AtomToInt(Yap_LookupAtom("volatile"));
  YAP_AtomToInt(Yap_LookupAtom("wait"));
  YAP_AtomToInt(Yap_LookupAtom("wakeup"));
  YAP_AtomToInt(Yap_LookupAtom("walltime"));
  YAP_AtomToInt(Yap_LookupAtom("warning"));
  YAP_AtomToInt(Yap_LookupAtom("wchar_t"));
  YAP_AtomToInt(Yap_LookupAtom("weak"));
  YAP_AtomToInt(Yap_LookupAtom("when_condition"));
  YAP_AtomToInt(Yap_LookupAtom("white"));
  YAP_AtomToInt(Yap_LookupAtom("write"));
  YAP_AtomToInt(Yap_LookupAtom("write_attributes"));
  YAP_AtomToInt(Yap_LookupAtom("write_option"));
  YAP_AtomToInt(Yap_LookupAtom("xdigit"));
  YAP_AtomToInt(Yap_LookupAtom("xf"));
  YAP_AtomToInt(Yap_LookupAtom("xfx"));
  YAP_AtomToInt(Yap_LookupAtom("xfy"));
  YAP_AtomToInt(Yap_LookupAtom("xml"));
  YAP_AtomToInt(Yap_LookupAtom("xor"));
  YAP_AtomToInt(Yap_LookupAtom("@"));
  YAP_AtomToInt(Yap_LookupAtom("yf"));
  YAP_AtomToInt(Yap_LookupAtom("yfx"));
  YAP_AtomToInt(Yap_LookupAtom("zero_divisor"));
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_abs),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_access),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_acos),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_acosh),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_alias),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_and),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_ar_equals),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_ar_not_equal),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_asin),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_asinh),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_assert),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_asserta),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_atan),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_atan),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_atanh),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_atan2),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_atom),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_att),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_backslash),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_bar),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_bitor),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_bom),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_brace_term_position),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_break),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_break),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_break),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_buffer),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_buffer_size),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_busy),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_call),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_catch),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_ceil),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_ceiling),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_chars),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_chars),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_class),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_clause),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_close_on_abort),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_close_on_exec),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_codes),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_codes),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_colon),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_comma),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_context),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_copysign),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_cos),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_cosh),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_cputime),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_curl),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_cut_call),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_cut_exit),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dand),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_date),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_date),9);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dc_call_prolog),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dcall),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dcut),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dde_error),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_debugging),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_decimal_point),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_detached),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dexit),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dforeign_registered),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dgarbage_collect),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_div),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_gdiv),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_divide),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dmessage_queue),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dmutex),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_domain_error),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dot),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_doublestar),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dparse_quasi_quotations),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dprof_node),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dquasi_quotation),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_drecover_and_rethrow),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dstream),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dthread_init),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dthrow),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dtime),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_duplicate_key),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dvard),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_dwakeup),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_e),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_encoding),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_end_of_stream),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_eof_action),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_epsilon),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_equals),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_erased),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_erf),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_erfc),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_error),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_eval),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_evaluation_error),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_exception),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_exception),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_existence_error),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_existence_error),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_exited),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_exp),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_exports),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_external_exception),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_fail),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_failure_error),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_file),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_file),4);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_file_name),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_file_no),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_float),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_float_fractional_part),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_float_integer_part),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_floor),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_foreign_function),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_frame),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_frame_finished),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_gcd),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_goal_expansion),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_ground),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_grouping),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_hat),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_ifthen),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_import_into),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_input),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_input),4);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_integer),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_interrupt),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_io_error),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_is),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_isovar),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_key_value_position),7);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_larger),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_larger_equal),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_lgamma),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_line_count),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_list_position),4);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_listing),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_locale),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_locked),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_log),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_log10),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_lsb),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_lshift),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_map_position),5);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_max),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_max_size),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_message_lines),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_min),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_minus),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_minus),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_mod),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_mode),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_msb),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_newline),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_nlink),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_nonvar),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_not_implemented),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_not_provable),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_not_strict_equal),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_occurs_check),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_or),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_output),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_permission_error),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_pi),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_pipe),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_plus),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_plus),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_popcount),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_portray),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_position),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_powm),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_print),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_print_message),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_priority),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_procedure),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_prove),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_prove),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_punct),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_quasi_quotation),4);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_quasi_quotation_position),5);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_random),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_random_float),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_rational),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_rationalize),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_rdiv),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_redo),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_rem),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_repeat),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_reposition),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_representation_error),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_representation_errors),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_resource_error),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_retry),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_round),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_rshift),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_semicolon),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_setup_call_catcher_cleanup),4);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_shared_object),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_shell),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_sign),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_signal),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_signal),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_sin),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_singletons),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_sinh),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_size),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_smaller),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_smaller_equal),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_softcut),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_spy),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_sqrt),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_star),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_status),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_stream),4);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_stream_position),4);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_strict_equal),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_string),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_string),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_string_position),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_syntax_error),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_syntax_error),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_tan),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_tanh),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_term_expansion),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_term_position),5);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_thousands_sep),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_timeout),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_timeout_error),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_trace),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_traceinterc),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_tracing),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_true),0);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_truncate),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_tty),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_type),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_type_error),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_undefinterc),4);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_unify_determined),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_uninstantiation_error),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_var),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_wakeup),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_warning),3);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_xor),2);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_xpceref),1);
  SWI_Functors[j++] = Yap_MkFunctor(SWIAtomToAtom(ATOM_xpceref),2);
